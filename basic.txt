import React from 'react';
export default class App extends React.Component {
  state = {
    firstname: '',
    lastname: '',
  };

  onChange = (e) => {
    this.setState({
      [e.target.name]: e.target.value,
    });
  };

  onFormSubmit = (e) => {
    e.preventDefault();
    const { firstname, lastname } = this.state;
    alert(`firstname=${firstname}&lastname=${lastname}`);
    
  };
  render() {
    const { firstname, lastname } = this.state;
    return (
      <>
        <form onSubmit={this.onFormSubmit}>
          <input type="text" name="firstname" onChange={this.onChange} />
          <input type="text" name="lastname" onChange={this.onChange} />
          <button type="submit">submit</button>
        </form>
        <p>firstName: {firstname}</p>
        <p>lastName: {lastname}</p>
      </>
    );
  }
}












import React from 'react';
import ReactDOM from 'react-dom';
 export default class Application extends React.Component {
  constructor(props) {
    super(props);

    //the Application component's state is below, which records the user's input.

    this.state = {
      //the display property on state allows me to toggle the view of the form vs. the view of the user's data
      display: false,
      firstName: '',
      lastName: '',
      phone: 0,
      email: '',
    };
  }

  inputCheck = (e) => {
    let filter = e.target.getAttribute('filter');
    e.target.value = e.target.value.replace(new RegExp(filter, 'g'), '');
    this.setState({ [e.target.name]: e.target.value });
  };

  submitCheck = () => {
    if (!this.state.firstName || !this.state.lastName) {
      alert('A name field is empty.');
    } else if (this.state.phone.length < 10 || !this.state.phone) {
      alert('Phone number is not long enough.');
    } else if (!this.state.email.match(/@./g)) {
      alert('Email is in the wrong format.');
    } else {
      this.setState({ display: true });
    }
  };

  resetForm = () => {
    this.setState({
      display: !this.state.display,
      firstName: '',
      lastName: '',
      phone: 0,
      email: '',
    });
  };
  //the displayForm function returns the JSX needed to display the form, and record the user's information
  displayForm() {
    return (
      <div className="form">
        <div className="header">
          <h1>Welcome!</h1>
          <p>Please provide your information below.</p>
        </div>
        <div className="inputcontainer">
          {/* Below are the text fields that record the user's information. Each uses the onChange event handler, and sets the user input value to the component's state in real time using e.target.value    */}
          <input
            filter="[^a-zA-Z ]"
            name="firstName"
            placeholder="First Name"
            onChange={this.inputCheck}
          />
          <input
            filter="[^a-zA-Z ]"
            name="lastName"
            placeholder="Last Name"
            onChange={this.inputCheck}
          />
          <input
            filter="[^0-9]"
            maxLength="10"
            name="phone"
            placeholder="Phone Number"
            onChange={this.inputCheck}
          />
          <input
            placeholder="Email Address"
            onChange={(e) => {
              this.setState({ email: e.target.value });
            }}
          />

          {/* Below is the submit button. Using the onClick event handler, it changes the value of this.state.display to false, which would trigger the ternary in the render method to display the user's info instead of this form*/}
          <button onClick={this.submitCheck}>Submit</button>
        </div>
      </div>
    );
  }



  /* Below is my displayData function. It returns the JSX needed to display the user's info after it is recorded. */
  displayData() {
    return (
      <div className="form">
        {/*Below is the JSX that displays the user's info in the specified format*/}
        <p>
          {this.state.lastName}, {this.state.firstName}
        </p>
        <p>
          {this.state.phone} | {this.state.email}
        </p>

        {/* The button below contains an onClick handler that switches the value of this.state.display to true, and thus would bring the user back to the original form*/}
        <button onClick={this.resetForm}>Reset</button>
      </div>
    );
  }
  render() {
    {
      /* Here in the render method, I'm returning a ternary operator that displays either the form, or the user's data, depending on the boolean value that is currently set to this.state.display*/
    }
    return this.state.display ? this.displayData() : this.displayForm();
  }
}



----------------------
import React from "react";
export default class Application extends React.Component {
  constructor(props) {
    super(props);

    this.state = {
      display: false,
      firstName: "",
      city: "",
    };
  }

  inputCheck = (e) => {
    this.setState({ [e.target.name]: e.target.value });
  };

  submitCheck = () => {
    this.setState({ display: true });
    // display: true
  };

  displayForm() {
    return (
      <div className="form">
        <div className="header">
          <h1>Welcome!</h1>
          <p>Please provide your information below.</p>
        </div>
        <div className="inputcontainer">
          <input
            name="firstName"
            placeholder="First Name"
            onChange={this.inputCheck}
          />
          <input name="city" placeholder="city" onChange={this.inputCheck} />

          <button onClick={this.submitCheck}>Submit</button>
        </div>
      </div>
    );
  }

  displayData() {
    return (
      <div className="form">
        <p>
          Name is <b>{this.state.city}</b> and the city is{" "}
          <b> {this.state.firstName}</b>
        </p>
      </div>
    );
  }
  render() {
    return this.state.display ? this.displayData() : this.displayForm();
  }
}
-----------------------

import './App.css';
import React, { Component } from 'react'

export default class App extends Component {

 
    state={
      "name":"",
      "city":""
    }

add=(e)=>{
  e.preventDefault();
  if(this.state.name===" " && this.state.email===""){
    alert("all the fiels")
  }
}

  render() {
    return (
      <div>
        <div>
        <form>
<label>name </label> 
<input onChange={(e) => this.setState({name:e.target.value})} type="text" value={this.state.name} ></input> <br/>
<label>city </label>
<input onChange={(e) => this.setState({city:e.target.value})} type="text" value={this.state.city} /><br/>
<button  >add</button>
</form> 

        </div>
      <div className='contentview_div'>
        <p>{this.state.name}</p>
        <p>{this.state.city}</p>
      </div>
      </div>
    )
  }
}





import React from 'react'
import { Card } from 'semantic-ui-react'

const CardExampleHeaderCard = () => (
  <Card.Group>
    <Card>
      <Card.Content>
        <Card.Header>Matthew Harris</Card.Header>
        <Card.Meta>Co-Worker</Card.Meta>
        <Card.Description>
          Matthew is a pianist living in Nashville.
        </Card.Description>
      </Card.Content>
    </Card>

    <Card>
      <Card.Content>
        <Card.Header content='Jake Smith' />
        <Card.Meta content='Musicians' />
        <Card.Description content='Jake is a drummer living in New York.' />
      </Card.Content>
    </Card>

    <Card>
      <Card.Content
        header='Elliot Baker'
        meta='Friend'
        description='Elliot is a music producer living in Chicago.'
      />
    </Card>

    <Card
      header='Jenny Hess'
      meta='Friend'
      description='Jenny is a student studying Media Management at the New School'
    />
  </Card.Group>
)

export default CardExampleHeaderCard
-------------------
<div class="ui cards">
  <div class="card">
    <div class="content">
      <img class="right floated mini ui image" src="/images/avatar/large/elliot.jpg">
      <div class="header">
        Elliot Fu
      </div>
      <div class="meta">
        Friends of Veronika
      </div>
      <div class="description">
        Elliot requested permission to view your contact details
      </div>
    </div>
    <div class="extra content">
      <div class="ui two buttons">
        <div class="ui basic green button">Approve</div>
        <div class="ui basic red button">Decline</div>
      </div>
    </div>
  </div>
  <div class="card">
    <div class="content">
      <img class="right floated mini ui image" src="/images/avatar/large/jenny.jpg">
      <div class="header">
        Jenny Hess
      </div>
      <div class="meta">
        New Member
      </div>
      <div class="description">
        Jenny wants to add you to the group <b>best friends</b>
      </div>
    </div>
    <div class="extra content">
      <div class="ui two buttons">
        <div class="ui basic green button">Approve</div>
        <div class="ui basic red button">Decline</div>
      </div>
    </div>
  </div>
</div>